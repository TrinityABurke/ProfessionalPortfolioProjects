#Global COVID-19 Data Exploration Portfolio Project
 
#For this analysis I have already checked and cleaned the data in Excel and Google Sheets and will be using BigQuery to demonstrate using multiple functions to analyze the information
 
#First I will check to make sure both tables have loaded into the dataset correctly. I made sure the location and date columns were presented in ascending order for easier viewing.
 
SELECT *
FROM `covid19-portfolio-project1.covid_data.covid_deaths`
ORDER BY 3,4
 
SELECT*
FROM `covid19-portfolio-project1.covid_data.covid_vaccs`
ORDER BY 3,4
 
#Next I will select the data I will be starting with for the analysis
 
SELECT location, date, total_cases, new_cases, total_deaths,population
FROM `covid19-portfolio-project1.covid_data.covid_deaths`
WHERE continent is not NULL
ORDER BY 1,2
 
#I want to find out the percentage of people dying after having a confirmed COVID19 infection. To get the percentage I will create an equation and rename. This information helps the public and professionals know the chances someone has of dying if contracting COVID19.
 
#Total Case VS Total Deaths
 
SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS DeathPercentage
FROM `covid19-portfolio-project1.covid_data.covid_deaths`
ORDER BY 1,2
 
#Now I want to look at the countries with the highest percentage rate of confirmed cases compared to their population. Because I want the highest percentage results and the highest number of cases I use MAX twice. To avoid a syntax error I have to group location and population. Since the percentage is the most important info I ordered by that column and made sure to get results in highest order first
 
#Highest Infection Count VS Population
 
SELECT location, Population, MAX(total_cases) AS HighestInfectionCount,MAX((total_cases/population))*100 as ConfirmedCasesPercentage
FROM `covid19-portfolio-project1.covid_data.covid_deaths`
GROUP BY location, population
ORDER BY ConfirmedCasesPercentage DESC
 
#Here I will look at what countries have the Highest Death Count. Because I want the highest results, I use MAX and rename equation.Because of the original data file for total_deaths, I need to use CAST to convert the output to an integer using AS int in parenthesis so that itâ€™s read as a numeric
 
SELECT location, MAX(cast(total_deaths as int)) AS TotalDeathCount
FROM `covid19-portfolio-project1.covid_data.covid_deaths`
GROUP BY location
ORDER BY TotalDeathCount DESC
 
#After the above results I noticed there was an issue with the data. In the Location column there were continents listed along with countries so I added a WHERE statement.
 
SELECT location, MAX(cast(total_deaths as int)) AS TotalDeathCount
FROM `covid19-portfolio-project1.covid_data.covid_deaths`
WHERE continent is not null
GROUP BY location
ORDER BY TotalDeathCount DESC
 
#Now I will break down the results by CONTINENT
 
SELECT continent, MAX(cast(total_deaths as int)) AS TotalDeathCount
FROM `covid19-portfolio-project1.covid_data.covid_deaths`
WHERE continent is not null
GROUP BY continent
ORDER BY TotalDeathCount DESC
 
SELECT location, MAX(cast(total_deaths as int)) AS TotalDeathCount
FROM `covid19-portfolio-project1.covid_data.covid_deaths`
WHERE continent is null
GROUP BY location
ORDER BY TotalDeathCount DESC
 
#Below are the COVID cases compared to deaths globally as a percentage
 
SELECT date,SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(new_cases)*100 as DeathPercentage
FROM `covid19-portfolio-project1.covid_data.covid_deaths`
WHERE continent is not null
GROUP BY date
ORDER BY 1,2
 
#The total number of COVID cases compared to deaths globally so far
 
SELECT SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(new_cases)*100 as DeathPercentage
FROM `covid19-portfolio-project1.covid_data.covid_deaths`
WHERE continent is not null
ORDER BY 1,2
 
#Now I will be joining the two datasets to complete a few more analysis
 
SELECT *
FROM `covid19-portfolio-project1.covid_data.covid_deaths` AS deaths
JOIN `covid19-portfolio-project1.covid_data.covid_vaccs` AS vaccs
ON deaths.location = vaccs.location
 and deaths.date = vaccs.date
 
#Now that I have the data combined, I will be looking at the Total Population vs Vaccinations
 
SELECT deaths.continent, deaths.location, deaths.date, deaths.population, vaccs.new_vaccinations
FROM `northamericacoviddeaths.covid_deaths_data.covid_deaths` AS deaths
JOIN `northamericacoviddeaths.covid_vaccs_data.covid_vaccs` AS vaccs
ON deaths.location = vaccs.location
 and deaths.date = vaccs.date
WHERE deaths.continent is not null
ORDER BY 2,3
 
#Looking at Total Population vs Vaccinations
#Getting the SUM of vaccinations by turning it to an integer and creating a rolling count of new vaccinations per day by country by creating a Partition by location using OVER (once it gets to a new location_country it will start count again)
 
SELECT deaths.continent, deaths.location, deaths.date, deaths.population, vaccs.new_vaccinations, SUM(CAST(vaccs.new_vaccinations AS int)) OVER (Partition by deaths.location)
FROM `covid19-portfolio-project1.covid_data.covid_deaths` AS deaths
JOIN `covid19-portfolio-project1.covid_data.covid_vaccs` AS vaccs
ON deaths.location = vaccs.location
 and deaths.date = vaccs.date
WHERE deaths.continent is not null
ORDER BY 2,3
 
#Looking at Total Population vs Vaccinations
#Getting a rolling count of above code but also ordering Partitioned results by location and date
 
SELECT deaths.continent, deaths.location, deaths.date, deaths.population, vaccs.new_vaccinations, SUM(CAST(vaccs.new_vaccinations AS int)) OVER (Partition by deaths.location ORDER BY deaths.location, deaths.date)
FROM `covid19-portfolio-project1.covid_data.covid_deaths` AS deaths
JOIN `covid19-portfolio-project1.covid_data.covid_vaccs` AS vaccs
ON deaths.location = vaccs.location
 and deaths.date = vaccs.date
WHERE deaths.continent is not null
ORDER BY 2,3
 
#Here I will be creating a CTE so I can look at the number of RollingPeopleVaccinated vs Vaccinations by using the MAX number of RollingPeopleVaccinated and divide it by population to see how many people in that country are vaccinated
#In order to do (RollingPeopleVaccinated/population)*100 I needed to create a CTE(common table expression)
#Initially put column names in () after starting WITH however kept getting AS syntax error. Removed the column names and received the same results
 
With PopvsVac
AS
(
SELECT deaths.continent, deaths.location, deaths.date, deaths.population, vaccs.new_vaccinations, SUM(CAST(vaccs.new_vaccinations AS int)) OVER (Partition by deaths.location ORDER BY deaths.location, deaths.date) as RollingPeopleVaccinated
FROM `covid19-portfolio-project1.covid_data.covid_deaths` AS deaths
JOIN `covid19-portfolio-project1.covid_data.covid_vaccs` AS vaccs
ON deaths.location = vaccs.location
and deaths.date = vaccs.date
WHERE deaths.continent is not null
)
SELECT *
FROM PopvsVac
 
#Lastly I will use the CTE created above to get a rolling percentage count of the number of people vaccinated by location
 
#Looking at Total Population vs Vaccinations (FINAL)
 
With PopvsVac
AS
(
SELECT deaths.continent, deaths.location, deaths.date, deaths.population, vaccs.new_vaccinations, SUM(CAST(vaccs.new_vaccinations AS int)) OVER (Partition by deaths.location ORDER BY deaths.location, deaths.date) as RollingPeopleVaccinated
FROM `covid19-portfolio-project1.covid_data.covid_deaths` AS deaths
JOIN `covid19-portfolio-project1.covid_data.covid_vaccs` AS vaccs
ON deaths.location = vaccs.location
and deaths.date = vaccs.date
WHERE deaths.continent is not null
)
SELECT *, (RollingPeopleVaccinated/population)*100
FROM PopvsVac

